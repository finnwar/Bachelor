function StressCalculation(U,t,nu,NodePositionTable,NodeTable)
    elementDisplacement = zeros(size(NodeTable));
    for e = 1:length(NodeTable(:,1))
        for i = 1:length(nodeTable(1,:))
            elementDisplacement(e,i)= U(NodeTable(e,i));
        end
    end
    C = E/(1-nu^2)*[1 nu 0;...
                 nu 1 0;...
                 0 0 (1-nu)/2];
    sigma_node=zeros(3*length(elementDisplacement(:,1)),4);
    sigma_abscissae=zeros(3*length(elementDisplacement(:,1)),4);

    [xi_vector,  ~] = GaussianQuadrature1D(2);
    [eta_vector, ~] = GaussianQuadrature1D(2);
    
    xi_nodes  = [-1 1];
    eta_nodes = [-1 1];
    
    for e=1:length(elementDisplacement(:,1))
        for j = 1:2
            for i = 1:2
                
                    
                [~,dNdxi,dNdeta] = ShapeFunctions(xi_nodes(i),eta_nodes(j));
                J = [dNdxi;dNdeta]*[NodePositionTable(e,1:2:7).' NodePositionTable(e,2:2:8).'];
                detJ = det(J);
                invJ = 1/detJ*[J(2,2) -J(1,2); -J(2,1) J(1,1)];
                
                B_node = B_matrix(xi_nodes(i),eta_nodes(j), invJ(1,1), invJ(2,1), invJ(1,2), invJ(2,2));
                
                sigma_node(e, i+2*(j-1)) = C*B*U;


                [~,dNdxi,dNdeta] = ShapeFunctions(xi_vector(i),eta_vector(j));
                J = [dNdxi;dNdeta]*[NodePositionTable(e,1:2:7).' NodePositionTable(e,2:2:8).'];
                detJ = det(J);
                invJ = 1/detJ*[J(2,2) -J(1,2); -J(2,1) J(1,1)];
                B_abscissae=B_matrix(xi_vector(i), eta_vector(j), invJ(1,1), invJ(2,1), invJ(1,2), invJ(2,2));
                sigma_abscissae(e, i+2*(j-1)) = C*B*U;
            end
        end
    end


end